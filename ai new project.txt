
// =========================================================================================
// ======================= ALL AI NEWS HUB - COMPLETE PROJECT BACKUP =======================
// =========================================================================================
// Created: 2025-08-09T18:50:18.240Z
// Status: Production Ready - 24/7 Automated System
// =========================================================================================


// =========================================================================================
// FILE: entities/NewsArticle.json
// =========================================================================================
{
    "name": "NewsArticle",
    "type": "object",
    "properties": {
        "title": {"type": "string", "description": "Article headline"},
        "summary": {"type": "string", "description": "Brief article summary"},
        "content": {"type": "string", "description": "Full article content"},
        "category": {"type": "string", "enum": ["ai", "technology", "startups", "breaking"], "description": "News category"},
        "source": {"type": "string", "description": "News source"},
        "author": {"type": "string", "description": "Article author"},
        "published_date": {"type": "string", "format": "date-time", "description": "Publication date"},
        "image_url": {"type": "string", "description": "Featured image URL"},
        "external_url": {"type": "string", "description": "Link to original article"},
        "tags": {"type": "array", "items": {"type": "string"}, "description": "Article tags"},
        "trending_score": {"type": "number", "description": "Trending relevance score"},
        "is_breaking": {"type": "boolean", "default": false, "description": "Breaking news flag"},
        "is_verified": {"type": "boolean", "default": false, "description": "Indicates if the news was verified by the AI monitor"},
        "verification_sources": {"type": "array", "items": {"type": "string"}, "description": "List of sources used for verification"}
    },
    "required": ["title", "summary", "category", "source"]
}


// =========================================================================================
// FILE: entities/Notification.json
// =========================================================================================
{
    "name": "Notification",
    "type": "object",
    "properties": {
        "user_email": {"type": "string", "description": "Email of the user this notification is for"},
        "title": {"type": "string", "description": "Notification title"},
        "message": {"type": "string", "description": "Notification content"},
        "type": {"type": "string", "enum": ["info", "success", "warning", "breaking"], "default": "info", "description": "Notification type"},
        "is_read": {"type": "boolean", "default": false, "description": "Has user read this notification"},
        "related_article_id": {"type": "string", "description": "Related news article ID"},
        "action_url": {"type": "string", "description": "URL to navigate when clicked"}
    },
    "required": ["user_email", "title", "message", "type"]
}


// =========================================================================================
// FILE: entities/AITool.json
// =========================================================================================
{
    "name": "AITool",
    "type": "object",
    "properties": {
        "name": {"type": "string", "description": "AI tool name"},
        "description": {"type": "string", "description": "Brief description of the AI tool"},
        "detailed_description": {"type": "string", "description": "Detailed description with features"},
        "category": {"type": "string", "enum": ["text-generation", "image-generation", "code-generation", "video-generation", "audio-generation", "productivity", "analytics", "chatbot", "automation", "design", "seo"], "description": "AI tool category"},
        "website_url": {"type": "string", "description": "Official website URL"},
        "pricing": {"type": "string", "enum": ["free", "freemium", "paid", "subscription"], "description": "Pricing model"},
        "launch_date": {"type": "string", "format": "date-time", "description": "Tool launch date"},
        "company": {"type": "string", "description": "Company or creator name"},
        "logo_url": {"type": "string", "description": "Tool logo image URL"},
        "features": {"type": "array", "items": {"type": "string"}, "description": "Key features list"},
        "tags": {"type": "array", "items": {"type": "string"}, "description": "Tags for the tool"},
        "popularity_score": {"type": "number", "description": "Popularity score 1-100"},
        "is_trending": {"type": "boolean", "default": false, "description": "Is tool currently trending"},
        "is_new": {"type": "boolean", "default": true, "description": "Is tool newly launched (within 30 days)"}
    },
    "required": ["name", "description", "category", "company", "launch_date"]
}


// =========================================================================================
// FILE: entities/User.json
// =========================================================================================
{
    "name": "User",
    "type": "object",
    "properties": {
        "phone_number": {"type": "string", "description": "WhatsApp number for notifications"},
        "notification_preferences": {"type": "object", "properties": {
            "email_enabled": {"type": "boolean", "default": true},
            "whatsapp_enabled": {"type": "boolean", "default": true},
            "categories": {"type": "array", "items": {"type": "string", "enum": ["ai", "technology", "startups", "breaking"]}, "default": ["ai", "technology", "startups", "breaking"]},
            "frequency": {"type": "string", "enum": ["immediate", "hourly", "daily"], "default": "hourly"}
        }},
        "bookmarked_articles": {"type": "array", "items": {"type": "string"}, "description": "Array of bookmarked article IDs"},
        "bookmarked_tools": {"type": "array", "items": {"type": "string"}, "description": "Array of bookmarked AI tool IDs"},
        "last_seen": {"type": "string", "format": "date-time", "description": "Last app visit timestamp"},
        "email_verification_otp": {"type": "string", "description": "OTP for email verification"},
        "email_verified": {"type": "boolean", "default": false, "description": "Flag to check if email is verified"}
    }
}


// =========================================================================================
// FILE: functions/masterNewsSystem.js
// =========================================================================================
import { createClient } from 'npm:@base44/sdk@0.1.0';

const base44 = createClient({
    appId: Deno.env.get('BASE44_APP_ID'),
});

Deno.serve(async (req) => {
    try {
        console.log("üöÄ MASTER NEWS SYSTEM - 24/7 REAL-TIME MONITORING STARTED");
        const startTime = new Date();
        
        // PHASE 1: BREAKING NEWS DETECTION WITH TRIPLE VERIFICATION
        const breakingWatchList = [
            // AI Giants - Tier 1 (Highest Priority)
            "OpenAI", "ChatGPT", "GPT-5", "Sam Altman", "Anthropic", "Claude", "Google AI", "Gemini", 
            "Microsoft AI", "Copilot", "Meta AI", "DeepSeek", "Perplexity", "Midjourney",
            
            // Tech Leaders - Tier 1
            "Apple", "iPhone", "Tim Cook", "Google", "Sundar Pichai", "Microsoft", "Satya Nadella", 
            "Meta", "Mark Zuckerberg", "Amazon", "Tesla", "Elon Musk", "Neuralink", "xAI", "Grok",
            
            // Breaking Keywords - Critical Events
            "breakthrough", "launches", "acquires", "merger", "IPO", "funding round", "Series A", "Series B",
            "lawsuit", "controversy", "hack", "data breach", "partnership", "collaboration",
            
            // Emerging AI Companies
            "Runway", "ElevenLabs", "Stability AI", "Character.AI", "Replika", "Hugging Face",
            "Cohere", "AI21", "Jasper", "Copy.ai", "Notion AI", "GitHub Copilot"
        ];

        // ULTRA-PRECISE REAL-TIME QUERY
        const masterQuery = `CRITICAL MISSION: Scan the ENTIRE INTERNET for breaking news from the past 1 hour involving: ${breakingWatchList.join(', ')}

SEARCH REQUIREMENTS:
üéØ TIME FRAME: Only news from the last 60 minutes
üîç SOURCES: Major outlets (TechCrunch, Reuters, Bloomberg, The Verge, Wired, CNN, BBC, AP News)
‚ö° PRIORITY: Product launches, acquisitions, funding, partnerships, controversies, breakthroughs
üö® BREAKING CRITERIA: Must be trending on social media or featured prominently on news sites
üìä VERIFICATION: Cross-reference across minimum 2 credible sources

Return 5-10 most significant breaking stories with complete verification chain.`;

        const llmResponse = await fetch(`https://api.base44.com/integrations/Core/InvokeLLM`, {
            method: 'POST',
            headers: { 
                'Content-Type': 'application/json', 
                'Authorization': `Bearer ${Deno.env.get('BASE44_API_KEY') || ''}` 
            },
            body: JSON.stringify({
                prompt: masterQuery,
                add_context_from_internet: true,
                response_json_schema: {
                    type: "object",
                    properties: {
                        breaking_stories: {
                            type: "array",
                            items: {
                                type: "object",
                                properties: {
                                    title: { type: "string" },
                                    summary: { type: "string" },
                                    primary_company: { type: "string" },
                                    category: { type: "string", enum: ["ai", "technology", "startups", "breaking"] },
                                    source: { type: "string" },
                                    author: { type: "string" },
                                    published_timestamp: { type: "string" },
                                    tags: { type: "array", items: { type: "string" } },
                                    urgency_level: { type: "number", minimum: 1, maximum: 100 },
                                    is_verified_breaking: { type: "boolean" },
                                    verification_sources: { type: "array", items: { type: "string" } },
                                    social_media_buzz: { type: "string", enum: ["high", "medium", "low"] },
                                    market_impact: { type: "string", enum: ["major", "moderate", "minor"] }
                                },
                                required: ["title", "summary", "primary_company", "category", "source", "urgency_level"]
                            }
                        }
                    },
                    required: ["breaking_stories"]
                }
            })
        });

        const rawData = await llmResponse.json();
        if (!rawData?.breaking_stories?.length) {
            console.log("üìä SCAN COMPLETE: No breaking news detected in current cycle");
            return new Response(JSON.stringify({ 
                success: true, 
                message: "Real-time scan complete - monitoring continues",
                scan_time: startTime.toISOString(),
                next_scan: new Date(startTime.getTime() + 3 * 60 * 1000).toISOString()
            }), { status: 200, headers: { "Content-Type": "application/json" } });
        }

        console.log(`üî• BREAKING NEWS DETECTED: ${rawData.breaking_stories.length} potential stories`);

        // PHASE 2: TRIPLE VERIFICATION SYSTEM
        let verifiedStories = [];
        let telegramAlerts = 0;
        const botToken = Deno.env.get("TELEGRAM_BOT_TOKEN");
        const chatId = Deno.env.get("TELEGRAM_CHAT_ID");

        for (const story of rawData.breaking_stories) {
            try {
                // FILTER 1: Urgency Check
                if (story.urgency_level < 80) {
                    console.log(`‚ö†Ô∏è LOW URGENCY: "${story.title}" (${story.urgency_level}/100) - SKIPPED`);
                    continue;
                }

                // FILTER 2: Duplicate Prevention (Last 8 Hours)
                const eightHoursAgo = new Date(startTime.getTime() - 8 * 60 * 60 * 1000).toISOString();
                const duplicateCheck = await base44.entities.NewsArticle.filter({
                    title: story.title,
                    created_date: { "$gte": eightHoursAgo }
                });

                if (duplicateCheck.length > 0) {
                    console.log(`üö´ DUPLICATE BLOCKED: "${story.title}" - Already published`);
                    continue;
                }

                // FILTER 3: Advanced Verification System
                const verificationQuery = `EXTREME VERIFICATION PROTOCOL: Verify breaking news: "${story.title}"

VERIFICATION CHECKLIST:
‚úÖ Search Reuters, AP, Bloomberg, TechCrunch, The Verge, Wired, CNN Tech
‚úÖ Check official company press releases and statements  
‚úÖ Verify on verified Twitter/X accounts of companies/executives
‚úÖ Cross-reference with multiple independent sources
‚úÖ Confirm timeline and factual accuracy
‚úÖ Assess credibility and source reliability

STRICT APPROVAL CRITERIA:
- Must be found on minimum 2 major credible sources
- Must be published within last 2 hours
- Must have official confirmation or credible source attribution
- No speculation or unverified claims

FINAL DECISION: Only approve if ALL criteria are met.`;

                const verificationResponse = await fetch(`https://api.base44.com/integrations/Core/InvokeLLM`, {
                    method: 'POST',
                    headers: { 
                        'Content-Type': 'application/json', 
                        'Authorization': `Bearer ${Deno.env.get('BASE44_API_KEY') || ''}` 
                    },
                    body: JSON.stringify({
                        prompt: verificationQuery,
                        add_context_from_internet: true,
                        response_json_schema: {
                            type: "object",
                            properties: {
                                is_fully_verified: { type: "boolean" },
                                confidence_rating: { type: "string", enum: ["extremely_high", "high", "medium", "low"] },
                                source_count: { type: "number" },
                                credible_sources_found: { type: "array", items: { type: "string" } },
                                verification_summary: { type: "string" },
                                final_verdict: { type: "string", enum: ["PUBLISH_IMMEDIATELY", "PUBLISH_WITH_CAUTION", "HOLD_FOR_MORE_INFO", "REJECT_INSUFFICIENT_PROOF"] },
                                risk_assessment: { type: "string", enum: ["very_low", "low", "medium", "high"] }
                            },
                            required: ["is_fully_verified", "confidence_rating", "final_verdict"]
                        }
                    })
                });

                const verification = await verificationResponse.json();

                // FILTER 4: Final Approval Gate
                if (!verification?.is_fully_verified || 
                    verification?.final_verdict !== "PUBLISH_IMMEDIATELY" || 
                    verification?.confidence_rating !== "extremely_high") {
                    console.log(`‚ùå VERIFICATION FAILED: "${story.title}"`);
                    console.log(`   Reason: ${verification?.verification_summary || 'Insufficient verification'}`);
                    continue;
                }

                console.log(`‚úÖ BREAKING NEWS VERIFIED: "${story.title}"`);
                console.log(`   Sources: ${verification.source_count} credible sources found`);

                // PHASE 3: GENERATE PREMIUM BREAKING NEWS IMAGE
                let breakingImageUrl = null;
                try {
                    const imageResponse = await fetch(`https://api.base44.com/integrations/Core/GenerateImage`, {
                        method: 'POST',
                        headers: { 
                            'Content-Type': 'application/json', 
                            'Authorization': `Bearer ${Deno.env.get('BASE44_API_KEY') || ''}` 
                        },
                        body: JSON.stringify({
                            prompt: `PROFESSIONAL BREAKING NEWS IMAGE: "${story.title}"

REQUIREMENTS:
- High-end news broadcast studio with "BREAKING NEWS" banner
- Professional news anchor desk with multiple monitors
- Corporate logo of "${story.primary_company}" prominently displayed
- Red "LIVE" indicator and timestamp overlay
- Breaking news graphics and urgent visual elements
- Professional broadcast lighting and camera angle
- CNN/BBC quality news production aesthetic
- Modern, credible news environment`
                        })
                    });
                    const imageData = await imageResponse.json();
                    if (imageData?.url) breakingImageUrl = imageData.url;
                } catch (imageError) {
                    console.log("Breaking news image generation failed:", imageError.message);
                }

                // PHASE 4: PUBLISH TO DATABASE WITH PREMIUM METADATA
                const verifiedArticle = await base44.entities.NewsArticle.create({
                    title: story.title,
                    summary: story.summary,
                    category: story.category === "breaking" ? "breaking" : story.category,
                    source: story.source,
                    author: story.author || "Breaking News Team",
                    published_date: story.published_timestamp || startTime.toISOString(),
                    image_url: breakingImageUrl,
                    tags: [
                        ...(story.tags || []), 
                        "breaking", "verified", "real-time", "urgent",
                        story.primary_company.toLowerCase(),
                        `urgency-${story.urgency_level}`
                    ],
                    trending_score: Math.min(story.urgency_level + 15, 100),
                    is_breaking: true,
                    is_verified: true,
                    verification_sources: verification.credible_sources_found || [story.source]
                });

                verifiedStories.push(verifiedArticle);

                // PHASE 5: PREMIUM TELEGRAM ALERT (ONLY FOR ULTRA-HIGH URGENCY)
                if (botToken && chatId && story.urgency_level >= 90) {
                    const urgencyIndicator = story.urgency_level >= 95 ? "üö®üî•üö® ULTRA URGENT üö®üî•üö®" : "üö® BREAKING NEWS üö®";
                    
                    const premiumTelegramMessage = `${urgencyIndicator}

*${story.title}*

üì∞ ${story.summary}

üè¢ *Company:* ${story.primary_company}
üìä *Urgency Level:* ${story.urgency_level}/100 ${story.urgency_level >= 95 ? 'üî•' : '‚ö°'}
üìç *Source:* ${story.source}
‚úÖ *Verification:* ${verification.source_count} credible sources
üåê *Market Impact:* ${story.market_impact || 'Major'}
üì± *Social Buzz:* ${story.social_media_buzz || 'High'}

‚è∞ *Breaking:* ${new Date().toLocaleTimeString('en-IN')} IST
ü§ñ *All AI News Hub* - Premium Real-Time Alerts`;

                    const telegramResponse = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            chat_id: chatId,
                            text: premiumTelegramMessage,
                            parse_mode: 'Markdown',
                            disable_web_page_preview: false
                        })
                    });

                    if (telegramResponse.ok) {
                        telegramAlerts++;
                        console.log(`üì± PREMIUM TELEGRAM ALERT SENT: "${story.title}"`);
                    } else {
                        const errorData = await telegramResponse.json();
                        console.error(`‚ùå Telegram Alert Failed: ${errorData.description}`);
                    }
                }

                // PHASE 6: IN-APP NOTIFICATIONS FOR ALL USERS
                try {
                    const allUsers = await base44.entities.User.list('created_date', 200);
                    for (const user of allUsers) {
                        if (user.email && user.notification_preferences?.categories?.includes(story.category)) {
                            await base44.entities.Notification.create({
                                user_email: user.email,
                                title: `üö® BREAKING: ${story.title}`,
                                message: `Urgent update from ${story.source}: ${story.summary.substring(0, 120)}...`,
                                type: 'breaking',
                                related_article_id: verifiedArticle.id
                            });
                        }
                    }
                    console.log(`üîî User notifications created for ${allUsers.length} users`);
                } catch (notificationError) {
                    console.error("User notification creation failed:", notificationError.message);
                }

            } catch (error) {
                console.error(`‚ùå Error processing story "${story.title}":`, error.message);
                continue;
            }
        }

        // PHASE 7: SYSTEM STATUS REPORT
        const endTime = new Date();
        const processingTime = (endTime.getTime() - startTime.getTime()) / 1000;

        const systemReport = {
            status: "SUCCESS",
            scan_timestamp: startTime.toISOString(),
            processing_time_seconds: processingTime,
            stories_analyzed: rawData.breaking_stories.length,
            stories_verified_and_published: verifiedStories.length,
            telegram_alerts_sent: telegramAlerts,
            next_scan_scheduled: new Date(endTime.getTime() + 3 * 60 * 1000).toISOString(),
            system_health: "OPTIMAL"
        };

        console.log("üéØ MASTER NEWS SYSTEM CYCLE COMPLETE:");
        console.log(`   üìä Analyzed: ${systemReport.stories_analyzed} stories`);
        console.log(`   ‚úÖ Published: ${systemReport.stories_verified_and_published} verified breaking news`);
        console.log(`   üì± Telegram: ${systemReport.telegram_alerts_sent} premium alerts sent`);
        console.log(`   ‚ö° Processing: ${systemReport.processing_time_seconds}s`);
        console.log(`   üîÑ Next Scan: ${systemReport.next_scan_scheduled}`);

        return new Response(JSON.stringify(systemReport), {
            status: 200,
            headers: { "Content-Type": "application/json" }
        });

    } catch (error) {
        console.error("üö® MASTER NEWS SYSTEM CRITICAL ERROR:", error);
        return new Response(JSON.stringify({
            status: "CRITICAL_ERROR",
            error: error.message,
            timestamp: new Date().toISOString(),
            system_health: "DEGRADED"
        }), {
            status: 500,
            headers: { "Content-Type": "application/json" }
        });
    }
});

// NOTE: ALL OTHER FUNCTION AND PAGE/COMPONENT FILES ARE OMITTED FOR BREVITY BUT ARE INCLUDED IN THE LOGICAL BACKUP.
// THIS IS THE CORE ENGINE.
